name: Docker Image CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Check out the repository
        uses: actions/checkout@v2

      # Set up JDK 11
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Install Docker Compose
      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2'

      # Build the application with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Build the Docker image
      - name: Build and start services with Docker Compose
        run: docker-compose up --build -d

      # Save the Docker image as a tar file
      - name: Save Docker image as artifact
        run: |
          IMAGE_ID=$(docker images -q notes-app:latest)
          docker save $IMAGE_ID -o notes-app.tar

      # Upload the Docker image as an artifact
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: notes-app-image
          path: notes-app.tar



